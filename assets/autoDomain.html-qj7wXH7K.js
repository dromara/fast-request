import{_ as i,e as d,g as o,f as p,j as t,h as n,r as a,o as s}from"./app-lwDcQkvH.js";const m="/img/2023.1.4/autoDomain.png",u={};function c(g,e){const l=a("Badge"),r=a("ColorIcon");return s(),d("div",null,[e[15]||(e[15]=o("h1",{id:"自动域名",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#自动域名"},[o("span",null,"自动域名")])],-1)),o("p",null,[e[0]||(e[0]=t("版本要求: ")),n(l,{text:"2023.1.4"})]),e[16]||(e[16]=o("h2",{id:"触发点",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#触发点"},[o("span",null,"触发点")])],-1)),o("p",null,[e[1]||(e[1]=t("方法左侧点击")),n(r,{icon:"restfulFastRequest"}),e[2]||(e[2]=t("的时候，如果没有配置域名，则自动创建一个。"))]),e[17]||(e[17]=o("h2",{id:"项目名取值",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#项目名取值"},[o("span",null,"项目名取值")])],-1)),e[18]||(e[18]=o("p",null,"自动生成的配置项目名取自当前 API 的模块名。",-1)),o("p",null,[e[3]||(e[3]=t("为什么呢？因为比方说项目下有 2 个模块")),e[4]||(e[4]=o("code",null,"Module-1",-1)),e[5]||(e[5]=t("、")),e[6]||(e[6]=o("code",null,"Module-2",-1)),e[7]||(e[7]=t("的 API，如果")),e[8]||(e[8]=o("code",null,"Module-1",-1)),e[9]||(e[9]=t("的域名已存储，在")),e[10]||(e[10]=o("code",null,"Module-2",-1)),e[11]||(e[11]=t("下的 API 点击方法左侧点击")),n(r,{icon:"restfulFastRequest"}),e[12]||(e[12]=t("的时候， ")),e[13]||(e[13]=o("strong",null,"老版本",-1)),e[14]||(e[14]=t("做不到自动切换项目名。"))]),e[19]||(e[19]=p('<p><mark>建议后期不要手动添加项目名</mark>，因为插件无法找到映射关系，这容易导致 API 保存的时候本该是用<code>Module-2</code>的域名，结果用了<code>Module-1</code>的域名。</p><p>所以自动域名的另外一个好使是<mark>API 域名的自动切换</mark>，如果没有则自动生成，如果有需改改进，开发者只需要修改域名值即可！插件将自动适配!</p><h2 id="配置文件解析逻辑" tabindex="-1"><a class="header-anchor" href="#配置文件解析逻辑"><span>配置文件解析逻辑</span></a></h2><ol><li>读取<code>application.yml</code>或者<code>bootstrap.yml</code>。如果找到配置<code>server.port</code>或者<code>server.servlet.context-path</code>，则取该配置。</li><li>如果以上配置文件无法找到<code>server.port</code>或者<code>server.servlet.context-path</code>，则读取<code>spring.profiles.active</code>，作为变量<code>env</code>。接着寻找<code>application-env.yml</code>或者<code>bootstrap-env.yml</code>，寻找配置<code>server.port</code>或者<code>server.servlet.context-path</code></li><li>properties 文件逻辑类似</li><li>以上配置无法找到则<code>port=8080，context-path=/</code></li><li>项目名称取自模块名</li><li><code>spring.profiles.active</code>不支持 Maven 变量读取解析，例如<code>spring.profiles.active=@active.env@</code></li><li>针对历史已保存的 api，插件不做自动域名处理；针对新的 API，如果开关开启，将自动创建域名</li></ol><h2 id="配置开关" tabindex="-1"><a class="header-anchor" href="#配置开关"><span>配置开关</span></a></h2><p><img src="'+m+'" alt="autoDomain" loading="lazy"></p>',6))])}const v=i(u,[["render",c],["__file","autoDomain.html.vue"]]),y=JSON.parse('{"path":"/guide/features/autoDomain.html","title":"自动域名","lang":"zh-CN","frontmatter":{"description":"自动域名 版本要求: 触发点 方法左侧点击 项目名取值 自动生成的配置项目名取自当前 API 的模块名。 为什么呢？因为比方说项目下有 2 个模块Module-1、Module-2的 API，如果Module-1的域名已存储，在Module-2下的 API 点击方法左侧点击 建议后期不要手动添加项目名，因为插件无法找到映射关系，这容易导致 API 保存...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://api-buddy.com/en/guide/features/autoDomain.html"}],["meta",{"property":"og:url","content":"https://api-buddy.com/guide/features/autoDomain.html"}],["meta",{"property":"og:site_name","content":"Fast Request"}],["meta",{"property":"og:title","content":"自动域名"}],["meta",{"property":"og:description","content":"自动域名 版本要求: 触发点 方法左侧点击 项目名取值 自动生成的配置项目名取自当前 API 的模块名。 为什么呢？因为比方说项目下有 2 个模块Module-1、Module-2的 API，如果Module-1的域名已存储，在Module-2下的 API 点击方法左侧点击 建议后期不要手动添加项目名，因为插件无法找到映射关系，这容易导致 API 保存..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://api-buddy.com/img/2023.1.4/autoDomain.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-31T09:24:19.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-31T09:24:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自动域名\\",\\"image\\":[\\"https://api-buddy.com/img/2023.1.4/autoDomain.png\\"],\\"dateModified\\":\\"2024-05-31T09:24:19.000Z\\",\\"author\\":[]}"]]},"git":{"createdTime":1717147459000,"updatedTime":1717147459000,"contributors":[{"name":"Kings","username":"Kings","email":"963987632@qq.com","commits":1,"url":"https://github.com/Kings"}]},"readingTime":{"minutes":1.39,"words":416},"filePathRelative":"guide/features/autoDomain.md","localizedDate":"2024年5月31日","autoDesc":true}');export{v as comp,y as data};
