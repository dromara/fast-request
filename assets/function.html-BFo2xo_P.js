import{_ as e,e as o,g as s,h as t,f as p,r as l,o as r}from"./app-lwDcQkvH.js";const c={};function i(y,n){const a=l("MyCarousel");return r(),o("div",null,[n[0]||(n[0]=s("h1",{id:"函数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#函数"},[s("span",null,"函数")])],-1)),t(a,{imgList:["/img/2024.1.7/function.png","/img/2024.1.7/functionInBody.png","/img/2024.1.7/functionConfig.png"]}),n[1]||(n[1]=p(`<p>路径：<code>项目级别配置 -&gt; Functions</code></p><p>使用 <code>{{$函数名}}</code> 形式来替换魔法值。<mark>函数必须是无参数的</mark>，否则不能正常工作。</p><p>输入<code>{{$</code>后按快捷键可以唤起函数自动补全。</p><p>开发者可以利用 jdk 中自带的类写属于自己定制化的函数，例如随机 5 个字符串</p><div class="language-java" data-highlighter="shiki" data-ext="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> String</span><span style="color:#61AFEF;"> randomString</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    StringBuilder</span><span style="color:#E06C75;"> sb </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> StringBuilder</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">5</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#E06C75;"> (</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 5</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">++</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        int</span><span style="color:#E06C75;"> randomIndex </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> RANDOM</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">nextInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CHAR_NORMAL</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">length</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">        sb</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CHAR_NORMAL</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">charAt</span><span style="color:#ABB2BF;">(randomIndex));</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> sb</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre></div><p>更可以使用 <a href="https://github.com/DiUS/java-faker" target="_blank" rel="noopener noreferrer">java-faker</a> 库，定制各种类型的参数随机生成。</p><div class="hint-container tip"><p class="hint-container-title">如何设置代码补全快捷键</p><p>在 <code>Setting -&gt; Keymap</code> 下的 <code>Main Menu-&gt;Code-&gt;Code Completion-&gt;Basic</code></p></div>`,7))])}const m=e(c,[["render",i],["__file","function.html.vue"]]),B=JSON.parse('{"path":"/guide/features/function.html","title":"函数","lang":"zh-CN","frontmatter":{"description":"函数","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://api-buddy.com/en/guide/features/function.html"}],["meta",{"property":"og:url","content":"https://api-buddy.com/guide/features/function.html"}],["meta",{"property":"og:site_name","content":"Fast Request"}],["meta",{"property":"og:title","content":"函数"}],["meta",{"property":"og:description","content":"函数"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-02T05:14:43.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-02T05:14:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-02T05:14:43.000Z\\",\\"author\\":[]}"]]},"git":{"createdTime":1724112922000,"updatedTime":1725254083000,"contributors":[{"name":"kings","username":"kings","email":"963987632@qq.com","commits":2,"url":"https://github.com/kings"},{"name":"Kings","username":"Kings","email":"963987632@qq.com","commits":1,"url":"https://github.com/Kings"}]},"readingTime":{"minutes":0.56,"words":169},"filePathRelative":"guide/features/function.md","localizedDate":"2024年8月20日","autoDesc":true}');export{m as comp,B as data};
