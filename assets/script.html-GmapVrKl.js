import{_ as i}from"./console_en-COOyIVA8.js";import{_ as c}from"./addLibrary-kgjSY3xy.js";import{_ as d,e as u,f as t,g as s,j as n,h as a,i as y,r as l,o as h}from"./app-lwDcQkvH.js";const B="/img/script_en.svg",m="/img/script_en.png",g="/img/2022.2.3/scriptDonate_en.png",b={},v={id:"request",tabindex:"-1"},F={class:"header-anchor",href:"#request"},f={id:"response",tabindex:"-1"},A={class:"header-anchor",href:"#response"},C={id:"rfr",tabindex:"-1"},k={class:"header-anchor",href:"#rfr"},q={id:"request-1",tabindex:"-1"},D={class:"header-anchor",href:"#request-1"},x={id:"response-1",tabindex:"-1"},E={class:"header-anchor",href:"#response-1"},j={id:"rfr-projectheader",tabindex:"-1"},S={class:"header-anchor",href:"#rfr-projectheader"},R={id:"rfr-apiheader",tabindex:"-1"},w={class:"header-anchor",href:"#rfr-apiheader"},U={id:"rfr-currentprojectname",tabindex:"-1"},P={class:"header-anchor",href:"#rfr-currentprojectname"},H={id:"rfr-currentenvname",tabindex:"-1"},T={class:"header-anchor",href:"#rfr-currentenvname"},N={id:"rfr-currentdomain",tabindex:"-1"},I={class:"header-anchor",href:"#rfr-currentdomain"},O={id:"rfr-currentmodulename",tabindex:"-1"},J={class:"header-anchor",href:"#rfr-currentmodulename"},L={id:"console",tabindex:"-1"},_={class:"header-anchor",href:"#console"},z={id:"_4-call-springboot-class-s-method",tabindex:"-1"},G={class:"header-anchor",href:"#_4-call-springboot-class-s-method"};function M(V,e){const o=l("Badge"),p=l("ColorIcon"),r=l("RouteLink");return h(),u("div",null,[e[25]||(e[25]=t('<p><strong>Function</strong>: Developers can use Groovy scripts to customize some logic, which makes the API more flexible, such as dynamically encrypting and signing parameters and putting them in the header rather than directly writing dead.</p><p><strong>Language</strong>: <a href="https://groovy-lang.org/" target="_blank" rel="noopener noreferrer">Groovy</a></p><p>The groovy syntax is almost identical to Java.</p><h2 id="script-flow-chart" tabindex="-1"><a class="header-anchor" href="#script-flow-chart"><span>Script flow chart</span></a></h2><p><img src="'+B+'" alt="" loading="lazy"></p><h2 id="pre-request-script" tabindex="-1"><a class="header-anchor" href="#pre-request-script"><span>Pre-request script</span></a></h2><p>The pre-request script is executed before the request is sent. You can process the request parameters here, such as encryption, signing, dynamic modification of headers, etc.</p><h2 id="post-request-script" tabindex="-1"><a class="header-anchor" href="#post-request-script"><span>Post-request script</span></a></h2><p>The post-request script is executed after the request is completed. You can process the response result here, such as extracting tokens, dynamically modifying headers, etc.</p><h2 id="execution-priority" tabindex="-1"><a class="header-anchor" href="#execution-priority"><span>Execution priority</span></a></h2><p>Project-level pre-request script &gt; Single API pre-request script -&gt; Project-level post-request script -&gt; Single API post-request script</p><h2 id="test-project" tabindex="-1"><a class="header-anchor" href="#test-project"><span>Test Project</span></a></h2><p><a href="https://github.com/kings1990/fast-request-samples" target="_blank" rel="noopener noreferrer">https://github.com/kings1990/fast-request-samples</a></p><h2 id="built-in-variable" tabindex="-1"><a class="header-anchor" href="#built-in-variable"><span>Built-in variable</span></a></h2><div class="hint-container caution"><p class="hint-container-title">Notice</p><p>Developers should pay attention to the fact that the built-in variable has been declared in the script edited by themselves instead of creating a new Request or Response object. Otherwise, it may cause unexpected errors.</p></div><p>Plugin use <a href="https://hutool.cn/" target="_blank" rel="noopener noreferrer">hutool</a> <code>cn.hutool.http.HttpRequest</code> to send request</p>',16)),s("h3",v,[s("a",F,[s("span",null,[e[0]||(e[0]=n("request ")),a(o,{text:"2022.2.3️",type:"tip"}),e[1]||(e[1]=n()),a(o,{text:"Deprecated",type:"danger"})])])]),e[26]||(e[26]=s("p",null,[s("strong",null,[n("Please use "),s("code",null,"rfr.request"),n(" instead.")])],-1)),e[27]||(e[27]=s("ul",null,[s("li",null,"Remark: Contains request-related information, such as url, header, body, parameters"),s("li",null,"Type: cn.hutool.http.HttpRequest")],-1)),e[28]||(e[28]=s("p",null,"Parameters can be dynamically adjusted by modifying the request value.",-1)),s("h3",f,[s("a",A,[s("span",null,[e[2]||(e[2]=n("response ")),a(o,{text:"2022.2.3️",type:"tip"}),e[3]||(e[3]=n()),a(o,{text:"Deprecated",type:"danger"})])])]),e[29]||(e[29]=s("p",null,[s("strong",null,[n("Please use "),s("code",null,"rfr.response"),n(" instead.")])],-1)),e[30]||(e[30]=s("ul",null,[s("li",null,"Remark: Contains response information"),s("li",null,"Type: cn.hutool.http.HttpResponse")],-1)),e[31]||(e[31]=s("p",null,"You can get the result of the response through the response value.",-1)),s("h3",C,[s("a",k,[s("span",null,[e[4]||(e[4]=n("rfr ")),a(o,{text:"2022.2.3️",type:"tip"})])])]),e[32]||(e[32]=s("ul",null,[s("li",null,"Remark: Contains some properties related to plugin interaction")],-1)),s("h4",q,[s("a",D,[s("span",null,[e[5]||(e[5]=n("request ")),a(o,{text:"2024.1.7️",type:"tip"})])])]),e[33]||(e[33]=s("ul",null,[s("li",null,"Remark: Contains request-related information, such as url, header, body, parameters"),s("li",null,"Type: cn.hutool.http.HttpRequest")],-1)),e[34]||(e[34]=s("p",null,"Parameters can be dynamically adjusted by modifying the request value.",-1)),s("h4",x,[s("a",E,[s("span",null,[e[6]||(e[6]=n("response ")),a(o,{text:"2024.1.7️",type:"tip"})])])]),e[35]||(e[35]=s("ul",null,[s("li",null,"Remark: Contains response information"),s("li",null,"Type: cn.hutool.http.HttpResponse")],-1)),s("h4",j,[s("a",S,[s("span",null,[e[7]||(e[7]=n("rfr.projectHeader ")),a(o,{text:"2022.2.3️",type:"tip"})])])]),e[36]||(e[36]=s("div",{class:"language-","data-highlighter":"shiki","data-ext":"",style:{"background-color":"#282c34",color:"#abb2bf"}},[s("pre",{class:"shiki one-dark-pro vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",null,"Remark: Contains project-level headers, which can be modified to dynamically set values in the UI")]),n(`
`),s("span",{class:"line"},[s("span",null,"Type: java.util.LinkedHashMap")])])])],-1)),s("h4",R,[s("a",w,[s("span",null,[e[8]||(e[8]=n("rfr.apiHeader ")),a(o,{text:"2022.2.3️",type:"tip"})])])]),e[37]||(e[37]=s("div",{class:"language-","data-highlighter":"shiki","data-ext":"",style:{"background-color":"#282c34",color:"#abb2bf"}},[s("pre",{class:"shiki one-dark-pro vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",null,"Remark: Contains module level headers, which can be modified to dynamically set values in the UI")]),n(`
`),s("span",{class:"line"},[s("span",null,"Type: java.util.LinkedHashMap")])])])],-1)),s("h4",U,[s("a",P,[s("span",null,[e[9]||(e[9]=n("rfr.currentProjectName ")),a(o,{text:"2022.2.5️",type:"tip"})])])]),e[38]||(e[38]=s("div",{class:"language-","data-highlighter":"shiki","data-ext":"",style:{"background-color":"#282c34",color:"#abb2bf"}},[s("pre",{class:"shiki one-dark-pro vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",null,"Remark: The project name of the item currently selected in the drop-down box")]),n(`
`),s("span",{class:"line"},[s("span",null,"Type: java.lang.String")])])])],-1)),s("h4",H,[s("a",T,[s("span",null,[e[10]||(e[10]=n("rfr.currentEnvName ")),a(o,{text:"2022.2.5️",type:"tip"})])])]),e[39]||(e[39]=s("div",{class:"language-","data-highlighter":"shiki","data-ext":"",style:{"background-color":"#282c34",color:"#abb2bf"}},[s("pre",{class:"shiki one-dark-pro vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",null,"Remark: The name of the environment currently selected in the drop-down box")]),n(`
`),s("span",{class:"line"},[s("span",null,"Type: java.lang.String")])])])],-1)),s("h4",N,[s("a",I,[s("span",null,[e[11]||(e[11]=n("rfr.currentDomain ")),a(o,{text:"2022.3.1️",type:"tip"})])])]),e[40]||(e[40]=s("div",{class:"language-","data-highlighter":"shiki","data-ext":"",style:{"background-color":"#282c34",color:"#abb2bf"}},[s("pre",{class:"shiki one-dark-pro vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",null,"Remark: Get the currently active domain link")]),n(`
`),s("span",{class:"line"},[s("span",null,"Type: java.lang.String")])])])],-1)),s("h4",O,[s("a",J,[s("span",null,[e[12]||(e[12]=n("rfr.currentModuleName ")),a(o,{text:"2022.3.1️",type:"tip"})])])]),e[41]||(e[41]=t(`<div class="language-" data-highlighter="shiki" data-ext="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>Remark: Get the currently module name of the API</span></span>
<span class="line"><span>Type: java.lang.String</span></span></code></pre></div><h2 id="import-third-jar" tabindex="-1"><a class="header-anchor" href="#import-third-jar"><span>Import third jar</span></a></h2><div class="hint-container tip"><p class="hint-container-title">Built-in Jar</p><div class="language-" data-highlighter="shiki" data-ext="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>com.alibaba:fastjson:1.2.78</span></span>
<span class="line"><span>cn.hutool:hutool-all:5.8.5</span></span>
<span class="line"><span>com.google.guava:guava:30.1.1-jre</span></span></code></pre></div><p>The version of Jar will be updated from time to time. If you find a bug, please contact up to upgrade.</p><p>Developers can use the tools and methods provided by the above three Jars to reference directly in the script without relying on third-party Jar.</p><p>Go to <a href="#demo">Demo</a> to learn how to get <a href="https://www.jetbrains.com/help/idea/auto-completing-code.html" target="_blank" rel="noopener noreferrer">Code completion</a>.</p></div><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> Import jar(maven style)</label></li></ul><p>Downloading the jar may take extra time.</p><div class="language-groovy" data-highlighter="shiki" data-ext="groovy" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">@Grab</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;org.apache.commons:commons-lang3:3.12.0&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.apache.commons.lang3.StringUtils</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">String</span><span style="color:#E06C75;"> debug</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> request.</span><span style="color:#61AFEF;">header</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;debug&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">StringUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isNotBlank</span><span style="color:#ABB2BF;">(debug)){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //some logic</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> Import jar(by local jar)</label></li></ul><div class="language-groovy" data-highlighter="shiki" data-ext="groovy" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//Note the file: prefix here</span></span>
<span class="line"><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.class.classLoader.</span><span style="color:#61AFEF;">addURL</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#C678DD;"> URL</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;file:/path/to/jar&quot;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#E06C75;"> StringUtils</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> Class</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forName</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;org.apache.commons.lang3.StringUtils&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">getDeclaredConstructor</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">newInstance</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">String</span><span style="color:#E06C75;"> debug</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> request.</span><span style="color:#61AFEF;">header</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;debug&quot;</span><span style="color:#ABB2BF;">)</span><span style="color:#7F848E;font-style:italic;">//get header</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">StringUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isNotBlank</span><span style="color:#ABB2BF;">(debug)){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //some logic</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="scope-and-order" tabindex="-1"><a class="header-anchor" href="#scope-and-order"><span>Scope and order</span></a></h2>`,9)),s("p",null,[e[14]||(e[14]=s("strong",null,"Scope",-1)),e[15]||(e[15]=n(": ")),e[16]||(e[16]=s("code",null,"Project-level",-1)),e[17]||(e[17]=n(" and ")),e[18]||(e[18]=s("code",null,"Single API level",-1)),e[19]||(e[19]=n("，")),e[20]||(e[20]=s("code",null,"Project-level",-1)),e[21]||(e[21]=n(" needs to click ")),a(r,{to:"/en/guide/features/projectValueConfig.html"},{default:y(()=>[a(p,{icon:"quanjucanshu"}),e[13]||(e[13]=n(" Project-level config"))]),_:1}),e[22]||(e[22]=n("."))]),e[42]||(e[42]=s("p",null,[s("code",null,"Project-level"),n(" will effort all APIs in the project, and "),s("code",null,"Single API level"),n(" only affects one API.")],-1)),e[43]||(e[43]=s("p",null,[n("Execute order："),s("code",null,"Project-level"),n("->"),s("code",null,"Single API level")],-1)),e[44]||(e[44]=s("p",null,[s("img",{src:m,alt:"scriptScope",loading:"lazy"})],-1)),s("h2",L,[s("a",_,[s("span",null,[e[23]||(e[23]=n("Console ")),a(o,{text:"2022.2.5",type:"tip"})])])]),e[45]||(e[45]=t(`<p>The console helps developers print some info you want.</p><div class="language-groovy" data-highlighter="shiki" data-ext="groovy" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">console.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;info&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">console.</span><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;print info&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">console.</span><span style="color:#61AFEF;">warn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;warn&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">console.</span><span style="color:#61AFEF;">success</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;success&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">console.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">)</span></span></code></pre></div><p><img src="`+i+'" alt="console" loading="lazy"></p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h2><div class="hint-container tip"><p class="hint-container-title">Code completion support</p><p>Add the following dependency to the project (if there is none), then you can use <a href="https://www.jetbrains.com/help/idea/auto-completing-code.html" target="_blank" rel="noopener noreferrer">Code completion</a> for the plugin&#39;s core classes in the editor (quickly importing classes, getting method hints, etc.).</p><p><img src="'+c+'" alt="" loading="lazy"></p></div><h3 id="_1-sign-parameter" tabindex="-1"><a class="header-anchor" href="#_1-sign-parameter"><span>1. Sign parameter</span></a></h3><p>Create a new xxx.groovy file in your local idea, paste the following code. After appropriate modification, it can ensure that the local can run normally and then paste the code into the script.</p>',7)),s("ul",null,[s("li",null,[a(o,{text:"Note that the final script needs to remove this line of code",type:"danger"})])]),e[46]||(e[46]=t(`<p><s>HttpRequest request = HttpUtil.createPost(&quot;http://localhost:8081/book/add&quot;)</s></p><div class="language-groovy line-numbers-mode" data-highlighter="shiki" data-ext="groovy" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.core.util.CharsetUtil</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.core.util.StrUtil</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.crypto.digest.DigestUtil</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.http.HttpRequest</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.http.HttpUtil</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//Script logic begins</span></span>
<span class="line"><span style="color:#C678DD;">String</span><span style="color:#E06C75;"> body</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> StrUtil</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">str</span><span style="color:#ABB2BF;">(request.</span><span style="color:#61AFEF;">bodyBytes</span><span style="color:#ABB2BF;">(), </span><span style="color:#C678DD;">CharsetUtil</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">CHARSET_UTF_8</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">body </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;xxxx&quot;</span><span style="color:#7F848E;font-style:italic;">//just for test</span></span>
<span class="line"><span style="color:#C678DD;">String</span><span style="color:#E06C75;"> sign</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> DigestUtil</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">md5Hex</span><span style="color:#ABB2BF;">(body)</span></span>
<span class="line"><span style="color:#ABB2BF;">request.</span><span style="color:#61AFEF;">header</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sign&quot;</span><span style="color:#ABB2BF;">,sign)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-use-the-response-of-a-request-as-the-header-parameter-of-the-request" tabindex="-1"><a class="header-anchor" href="#_2-use-the-response-of-a-request-as-the-header-parameter-of-the-request"><span>2. Use the response of a request as the Header parameter of the request.</span></a></h3><p>Note that the logic of obtaining the token must be handled in conjunction with the data structure returned by the http response. For example, if response returns</p><div class="language-json" data-highlighter="shiki" data-ext="json" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;success&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;code&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;data&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;token&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;xxxxx&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><p>It needs to be written like this</p><p><code>String token = JSON.parseObject(myResponse.body()).getJSONObject(&quot;data&quot;).getString(&quot;token&quot;)</code></p><div class="language-groovy line-numbers-mode" data-highlighter="shiki" data-ext="groovy" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.core.util.CharsetUtil</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.core.util.StrUtil</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.crypto.digest.DigestUtil</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.http.HttpRequest</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.http.HttpResponse</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.http.HttpUtil</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> com.alibaba.fastjson.JSON</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">HttpRequest</span><span style="color:#E06C75;"> myRequest</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> HttpUtil</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createPost</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;http://localhost:8081/api/v1.0/login&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">HttpResponse</span><span style="color:#E06C75;"> myResponse</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> myRequest.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(myResponse.</span><span style="color:#61AFEF;">isOk</span><span style="color:#ABB2BF;">()){</span></span>
<span class="line"><span style="color:#C678DD;">    String</span><span style="color:#ABB2BF;"> token </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parseObject</span><span style="color:#ABB2BF;">(myResponse.</span><span style="color:#61AFEF;">body</span><span style="color:#ABB2BF;">()).</span><span style="color:#61AFEF;">getString</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;token&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    request.</span><span style="color:#61AFEF;">header</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;token&quot;</span><span style="color:#ABB2BF;">,token)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-set-an-environment-variable" tabindex="-1"><a class="header-anchor" href="#_3-set-an-environment-variable"><span>3. Set an environment variable</span></a></h3><p>If response returns</p><div class="language-json" data-highlighter="shiki" data-ext="json" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;success&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;code&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;data&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;token&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;xxxxx&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><p>You can add this code in the post-script</p><div class="language-groovy line-numbers-mode" data-highlighter="shiki" data-ext="groovy" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.core.util.CharsetUtil</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.core.util.StrUtil</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.crypto.digest.DigestUtil</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.http.HttpRequest</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.http.HttpResponse</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> cn.hutool.http.HttpUtil</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> com.alibaba.fastjson.JSON</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">HttpRequest</span><span style="color:#E06C75;"> myRequest</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> HttpUtil</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createPost</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;http://localhost:8081/api/v1.0/login&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">HttpResponse</span><span style="color:#E06C75;"> myResponse</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> myRequest.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(myResponse.</span><span style="color:#61AFEF;">isOk</span><span style="color:#ABB2BF;">()){</span></span>
<span class="line"><span style="color:#C678DD;">    String</span><span style="color:#ABB2BF;"> token </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parseObject</span><span style="color:#ABB2BF;">(myResponse.</span><span style="color:#61AFEF;">body</span><span style="color:#ABB2BF;">()).</span><span style="color:#61AFEF;">getJSONObject</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;data&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">getString</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;token&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    rfr.environment.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;token&quot;</span><span style="color:#ABB2BF;">,token)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13)),s("h3",z,[s("a",G,[s("span",null,[e[24]||(e[24]=n("4.Call SpringBoot class's method ")),a(o,{text:"2025.1.4️",type:"tip"})])])]),e[47]||(e[47]=t(`<div class="language-groovy" data-highlighter="shiki" data-ext="groovy" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">def</span><span style="color:#E06C75;"> XxxUtil</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#C678DD;"> FrLocalClassLoader</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path/to/classes&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">loadClass</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;some.package.XxxUtil&quot;</span><span style="color:#ABB2BF;">)</span></span></code></pre></div><p>After the SpringBoot project is compiled, a <code>classes</code> directory will be generated in the <code>target</code> directory of the module.</p><p>You can use <code>FrLocalClassLoader</code> to load the classes in this directory and call the methods directly.</p><p>Note that you need to replace <code>path/to/classes</code> with the absolute path and <code>some.package.XxxUtil</code> with the full name of the class.</p><h2 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>Note</span></a></h2><ul><li>Groovy scripts are not sensitive to <code>;</code>, Java uses <code>;</code> as the end of the statement code, Groovy uses a newline to indicate the end of a code</li><li>The built-in variable has been declared. For example, in Demo 2, if an additional request needs to be created, the variable name needs to be noted that it cannot be the same as the built-in variable.</li></ul><h2 id="script-contribute" tabindex="-1"><a class="header-anchor" href="#script-contribute"><span>Script contribute 🌟</span></a></h2><p>In order to make the script more powerful, community script are welcome, and developers can donate the script in comments</p><ul><li>Format</li></ul><div class="language-groovy" data-highlighter="shiki" data-ext="groovy" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Author:Kings</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Main Page:https://github.com/kings1990</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Function:xxxxx</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//Script begin</span></span>
<span class="line"><span style="color:#ABB2BF;">....</span></span></code></pre></div><p><img src="`+g+'" alt="scriptDonate" loading="lazy"></p>',11))])}const Z=d(b,[["render",M],["__file","script.html.vue"]]),Q=JSON.parse('{"path":"/en/guide/script.html","title":"Script","lang":"en-US","frontmatter":{"title":"Script","icon":"code-box-fill","description":"Function: Developers can use Groovy scripts to customize some logic, which makes the API more flexible, such as dynamically encrypting and signing parameters and putting them in...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://api-buddy.com/guide/script.html"}],["meta",{"property":"og:url","content":"https://api-buddy.com/en/guide/script.html"}],["meta",{"property":"og:site_name","content":"Fast Request"}],["meta",{"property":"og:title","content":"Script"}],["meta",{"property":"og:description","content":"Function: Developers can use Groovy scripts to customize some logic, which makes the API more flexible, such as dynamically encrypting and signing parameters and putting them in..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://api-buddy.com/img/script_en.svg"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-28T01:23:56.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-28T01:23:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Script\\",\\"image\\":[\\"https://api-buddy.com/img/script_en.svg\\",\\"https://api-buddy.com/img/script_en.png\\",\\"https://api-buddy.com/img/2022.2.5/console_en.png\\",\\"https://api-buddy.com/img/2024.1.5/addLibrary.png\\",\\"https://api-buddy.com/img/2022.2.3/scriptDonate_en.png\\"],\\"dateModified\\":\\"2025-04-28T01:23:56.000Z\\",\\"author\\":[]}"]]},"git":{"createdTime":1717147459000,"updatedTime":1745803436000,"contributors":[{"name":"Kings","username":"Kings","email":"963987632@qq.com","commits":3,"url":"https://github.com/Kings"},{"name":"kings","username":"kings","email":"963987632@qq.com","commits":1,"url":"https://github.com/kings"},{"name":"Mr.Hope","username":"Mr.Hope","email":"mister-hope@outlook.com","commits":1,"url":"https://github.com/Mr.Hope"}]},"readingTime":{"minutes":3.86,"words":1157},"filePathRelative":"en/guide/script.md","localizedDate":"May 31, 2024","autoDesc":true}');export{Z as comp,Q as data};
