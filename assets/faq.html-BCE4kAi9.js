import{_ as u,a as g,b as y,c as m,d as f,e as b}from"./dataTransfer202313-BQhE98j8.js";import{_ as v}from"./ignoreFiled-CuuXUCaT.js";import{_ as B}from"./apiPreview-Dv_H9Vbo.js";import{_ as C,e as q,g as n,f as p,h as l,j as a,i as e,r,o as h}from"./app-lwDcQkvH.js";const F="/img/manageConfig.png",A="/img/faq/timeout.png",D="/img/skill/urlError.png",x={},E={class:"table-of-contents"},k={start:"0"};function S(R,s){const d=r("Badge"),o=r("router-link"),t=r("ColorIcon"),i=r("RouteLink"),c=r("MyCarousel");return h(),q("div",null,[n("blockquote",null,[s[0]||(s[0]=n("p",null,"关键字含义",-1)),l(d,{text:"S: 技巧",color:"#087CFA"}),s[1]||(s[1]=a()),l(d,{text:"Q: 问题",color:"#FE2857"}),s[2]||(s[2]=a()),l(d,{text:"A: 答案",color:"#21D789"}),s[3]||(s[3]=n("hr",null,null,-1)),s[4]||(s[4]=n("p",null,"我们将持续更新开发者遇到的问题以及解决方案",-1))]),n("nav",E,[n("ul",null,[n("li",null,[l(o,{to:"#s-如何忽略-fastrequest-目录"},{default:e(()=>s[5]||(s[5]=[a("S: 如何忽略 .fastRequest 目录")])),_:1})]),n("li",null,[l(o,{to:"#s-slow-operations-are-prohibited-on-edt"},{default:e(()=>s[6]||(s[6]=[a("S: Slow operations are prohibited on EDT")])),_:1})]),n("li",null,[l(o,{to:"#s-发送按钮被禁用-但是没有任何提示"},{default:e(()=>s[7]||(s[7]=[a("S: 发送按钮被禁用,但是没有任何提示")])),_:1})]),n("li",null,[l(o,{to:"#s-超时时间设置"},{default:e(()=>s[8]||(s[8]=[a("S: 超时时间设置")])),_:1})]),n("li",null,[l(o,{to:"#s-快捷添加域名"},{default:e(()=>s[9]||(s[9]=[a("S: 快捷添加域名")])),_:1})]),n("li",null,[l(o,{to:"#s-url-错误"},{default:e(()=>s[10]||(s[10]=[a("S: Url 错误")])),_:1})]),n("li",null,[l(o,{to:"#s-解析如何忽略某个字段"},{default:e(()=>s[11]||(s[11]=[a("S: 解析如何忽略某个字段")])),_:1})]),n("li",null,[l(o,{to:"#s-快速定位"},{default:e(()=>s[12]||(s[12]=[a("S: 快速定位")])),_:1})]),n("li",null,[l(o,{to:"#s-多文件上传"},{default:e(()=>s[13]||(s[13]=[a("S: 多文件上传")])),_:1})]),n("li",null,[l(o,{to:"#s-body-中想直接传-text"},{default:e(()=>s[14]||(s[14]=[a("S: Body 中想直接传 text")])),_:1})]),n("li",null,[l(o,{to:"#s-没有-controller-如何发送请求"},{default:e(()=>s[15]||(s[15]=[a("S: 没有 Controller，如何发送请求")])),_:1})]),n("li",null,[l(o,{to:"#s-写脚本时得到提示"},{default:e(()=>s[16]||(s[16]=[a("S: 写脚本时得到提示")])),_:1})]),n("li",null,[l(o,{to:"#s-api-文档同步"},{default:e(()=>s[17]||(s[17]=[a("S: API 文档同步")])),_:1})]),n("li",null,[l(o,{to:"#s-apis-回显"},{default:e(()=>s[18]||(s[18]=[a("S: APIs 回显")])),_:1})]),n("li",null,[l(o,{to:"#s-最佳视觉效果"},{default:e(()=>s[19]||(s[19]=[a("S: 最佳视觉效果")])),_:1})]),n("li",null,[l(o,{to:"#s-怀疑插件卡顿"},{default:e(()=>s[20]||(s[20]=[a("S: 怀疑插件卡顿")])),_:1})]),n("li",null,[l(o,{to:"#q-origin等请求头失效"},{default:e(()=>s[21]||(s[21]=[a("Q: Origin等请求头失效")])),_:1})]),n("li",null,[l(o,{to:"#q-响应返回-unexpected-end-of-file-from-server"},{default:e(()=>s[22]||(s[22]=[a("Q: 响应返回 Unexpected end of file from server")])),_:1})]),n("li",null,[l(o,{to:"#q-spring-get参数带数组-集合参数报-400错误"},{default:e(()=>s[23]||(s[23]=[a("Q: Spring Get参数带数组/集合参数报 400错误")])),_:1})]),n("li",null,[l(o,{to:"#q-操作按钮不可见"},{default:e(()=>s[24]||(s[24]=[a("Q: 操作按钮不可见")])),_:1})]),n("li",null,[l(o,{to:"#q-生成参数、跳转错乱"},{default:e(()=>s[25]||(s[25]=[a("Q: 生成参数、跳转错乱")])),_:1})]),n("li",null,[l(o,{to:"#q-左侧图标不显示"},{default:e(()=>s[26]||(s[26]=[a("Q: 左侧图标不显示")])),_:1})]),n("li",null,[l(o,{to:"#q-输入参数后调用-api-发现无效"},{default:e(()=>s[27]||(s[27]=[a("Q: 输入参数后调用 API 发现无效")])),_:1})]),n("li",null,[l(o,{to:"#q-为啥插件没反应"},{default:e(()=>s[28]||(s[28]=[a("Q: 为啥插件没反应")])),_:1})]),n("li",null,[l(o,{to:"#q-点击图标后-idea-卡死"},{default:e(()=>s[29]||(s[29]=[a("Q: 点击图标后 idea 卡死")])),_:1})]),n("li",null,[l(o,{to:"#s-apis-丢失"},{default:e(()=>s[30]||(s[30]=[a("S: APIs 丢失")])),_:1})])])]),s[62]||(s[62]=p('<h2 id="s-如何忽略-fastrequest-目录" tabindex="-1"><a class="header-anchor" href="#s-如何忽略-fastrequest-目录"><span>S: 如何忽略 .fastRequest 目录</span></a></h2><ul><li>方式 1：在 IDEA 中不可见</li></ul><p>有些开发者不希望看到<code>.fastRequest</code>目录，可以前往 idea 设置中的<code>File Types</code>，在<code>Ignore files and folders</code>中添加<code>.fastRequest</code>即可</p><p><img src="'+g+`" alt="ignoreFastRequestDir" loading="lazy"></p><ul><li>方式 2：设置全局 gitignore</li></ul><p>当你想要在 git 管理的项目中忽略<code>.fastRequest</code>目录，可以设置全局 gitignore 文件。</p><ol><li>创建全局 .gitignore 文件： 选择一个位置来存储全局 .gitignore 文件，例如在你的主目录中创建一个名为 .gitignore_global 的文件。</li></ol><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">touch</span><span style="color:#98C379;"> ~/.gitignore_global</span></span></code></pre></div><ol start="2"><li>配置 Git 使用全局 .gitignore 文件： 使用 Git 命令将这个文件设置为全局 .gitignore 文件。</li></ol><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#D19A66;"> --global</span><span style="color:#98C379;"> core.excludesFile</span><span style="color:#98C379;"> ~/.gitignore_global</span></span></code></pre></div><ol start="3"><li>编辑全局 .gitignore 文件： 在 ~/.gitignore_global 文件中添加你想要忽略的文件或目录模式。</li></ol><div class="language-" data-highlighter="shiki" data-ext="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>.fastRequest</span></span></code></pre></div><ul><li>方式 3：针对已经提交到 git，但是后面想忽略该目录</li></ul><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> rm</span><span style="color:#D19A66;"> --cached</span><span style="color:#98C379;"> .fastRequest</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &quot;rm ignore folder&quot;</span></span></code></pre></div><p>后面再参考方式 1 或者方式 2 进行忽略</p><h2 id="s-slow-operations-are-prohibited-on-edt" tabindex="-1"><a class="header-anchor" href="#s-slow-operations-are-prohibited-on-edt"><span>S: Slow operations are prohibited on EDT</span></a></h2><p>报错<code>Slow operations are prohibited on EDT</code>相关错误。</p><p>在 SearchEveryWhere 中输入关键字 <code>ide.slow.operations.assertion</code> ,并将下图所示的关闭。</p><p><img src="`+y+'" alt="slowOperationsConfig" loading="lazy"></p><h2 id="s-发送按钮被禁用-但是没有任何提示" tabindex="-1"><a class="header-anchor" href="#s-发送按钮被禁用-但是没有任何提示"><span>S: 发送按钮被禁用,但是没有任何提示</span></a></h2><p>需要手动开启通知消息。如果通知消息不开启,很多提示都不能被展现,所以需要配置 IDEA 的消息通知设置。其他情况类同处理。</p><p>需要前往 <code>Setting-&gt; Appearance &amp; Behavior-&gt;Nofications</code> 选中 <code>Display ballon notifications</code>和<code>Enable system notifications</code>. 如果<code>Don&#39;t ask again nofications</code>勾选了FastRequest,则需要移除条目。</p><p><img src="'+m+'" alt="enableNotifications" loading="lazy"></p><h2 id="s-超时时间设置" tabindex="-1"><a class="header-anchor" href="#s-超时时间设置"><span>S: 超时时间设置</span></a></h2><p>默认: 60 秒</p><p>点击插件设置按钮<strong>管理配置</strong>,设置ConnectTimeout和ReadTimeout的值。</p><p><img src="'+F+'" alt="manageConfig" loading="lazy"></p><p><img src="'+A+'" alt="timeout" loading="lazy"></p><h2 id="s-快捷添加域名" tabindex="-1"><a class="header-anchor" href="#s-快捷添加域名"><span>S: 快捷添加域名</span></a></h2>',29)),n("p",null,[s[32]||(s[32]=a("请参考 ")),l(i,{to:"/guide/features/projectLevelDomainConfig.html"},{default:e(()=>[l(t,{icon:"domainConfig"}),s[31]||(s[31]=a(" 项目级别域名配置"))]),_:1}),s[33]||(s[33]=a(" (插件版本>=")),s[34]||(s[34]=n("strong",null,"2023.1.1",-1)),s[35]||(s[35]=a(")"))]),s[63]||(s[63]=n("h2",{id:"s-url-错误",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#s-url-错误"},[n("span",null,"S: Url 错误")])],-1)),s[64]||(s[64]=n("p",null,[n("img",{src:D,alt:"urlError",loading:"lazy"})],-1)),l(d,{text:"解决办法",type:"tip"}),s[65]||(s[65]=p(`<ol><li>配置正确的域名，并启用项目和环境2个下拉框</li><li>设置正确的url，例如需要将url上的变量{id}替换，可以在Path Param tab中替换变量</li></ol><h2 id="s-解析如何忽略某个字段" tabindex="-1"><a class="header-anchor" href="#s-解析如何忽略某个字段"><span>S: 解析如何忽略某个字段</span></a></h2><p>方式 1： 给字段使用如下 2 种注解中的一种</p><div class="language-" data-highlighter="shiki" data-ext="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>com.fasterxml.jackson.annotation.JsonIgnore</span></span>
<span class="line"><span></span></span>
<span class="line"><span>com.alibaba.fastjson.annotation.JSONField(serialize = false)</span></span></code></pre></div><p>方式 2： 给字段增加 <code>static</code> 修饰符</p><p>方式 3：注释上加@fastRequestParseIgnore</p><div class="language-java" data-highlighter="shiki" data-ext="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * xxx description</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * @fastRequestParseIgnore</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">private</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> someIgnoreField </span><span style="color:#ABB2BF;">;</span></span></code></pre></div><p>方式 4: 忽略字段名解析配置</p><p><img src="`+v+'" alt="ignoreFiled" loading="lazy"></p><p>只需要在配置中增加字段名，即可将实体类中的特定字段忽略生成</p><h2 id="s-快速定位" tabindex="-1"><a class="header-anchor" href="#s-快速定位"><span>S: 快速定位</span></a></h2><p>获取到窗口或者弹出框焦点以后，输入需要搜索的字母，快读定位，然后使用<code>↑</code>箭头或者<code>↓</code>箭头进行跳跃定位</p><p>例如:</p><p><img src="'+B+'" alt="apiDocExample" loading="lazy"></p><h2 id="s-多文件上传" tabindex="-1"><a class="header-anchor" href="#s-多文件上传"><span>S: 多文件上传</span></a></h2><p>输入多个值并将字段类型设置为 file</p><p><img src="'+f+'" alt="multiFileUpload" loading="lazy"></p><h2 id="s-body-中想直接传-text" tabindex="-1"><a class="header-anchor" href="#s-body-中想直接传-text"><span>S: Body 中想直接传 text</span></a></h2><p>在 header 中加入<strong>Content-Type: text/plain</strong></p>',19)),n("p",null,[s[37]||(s[37]=a("考虑使用")),l(i,{to:"/guide/features/commonHeader.html"},{default:e(()=>s[36]||(s[36]=[a("常用头参数")])),_:1}),s[38]||(s[38]=a("快速添加"))]),s[66]||(s[66]=n("h2",{id:"s-没有-controller-如何发送请求",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#s-没有-controller-如何发送请求"},[n("span",null,"S: 没有 Controller，如何发送请求")])],-1)),n("p",null,[s[40]||(s[40]=a("参考")),l(i,{to:"/guide/features/tempRequest.html"},{default:e(()=>s[39]||(s[39]=[a("临时请求")])),_:1})]),s[67]||(s[67]=p(`<h2 id="s-写脚本时得到提示" tabindex="-1"><a class="header-anchor" href="#s-写脚本时得到提示"><span>S: 写脚本时得到提示</span></a></h2><p>复制一下代码，完成脚本编辑后删除</p><div class="language-" data-highlighter="shiki" data-ext="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>import cn.hutool.http.HttpUtil</span></span>
<span class="line"><span></span></span>
<span class="line"><span>def request = HttpUtil.createGet(&quot;shouldremove&quot;)</span></span>
<span class="line"><span>def response = request.execute()</span></span></code></pre></div><h2 id="s-api-文档同步" tabindex="-1"><a class="header-anchor" href="#s-api-文档同步"><span>S: API 文档同步</span></a></h2>`,4)),n("p",null,[s[41]||(s[41]=a("当你修改了你的接口参数，从 APIs 列表双击回来的 api 是你未更新前保存的 API，此时你想保证在线 API 文档是你修改后的， 需要再点一下 ")),l(t,{icon:"saveNew"}),s[42]||(s[42]=a("(保存) 或者左侧图标 ")),l(t,{icon:"restfulFastRequest"}),s[43]||(s[43]=a(" ,再进行同步。"))]),s[68]||(s[68]=n("p",null,"建议：不需要提前在 Github、Gitee、Gitlab 创建仓库，插件自动会帮助创建，开发者只需要提供仓库名就行",-1)),s[69]||(s[69]=n("h2",{id:"s-apis-回显",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#s-apis-回显"},[n("span",null,"S: APIs 回显")])],-1)),n("p",null,[s[45]||(s[45]=a("针对保存后的 api，又进行了修改，那么你需要手动补参数并保存。如果你完全不想要之前的参数了，直接点击")),l(t,{icon:"regenerate"}),s[46]||(s[46]=a("(")),l(i,{to:"/guide/features/regenerate.html"},{default:e(()=>s[44]||(s[44]=[a("重新生成")])),_:1}),s[47]||(s[47]=a(")"))]),n("p",null,[n("strong",null,[s[48]||(s[48]=a("请确保你每次修改参数后点击")),s[49]||(s[49]=n("code",null,"保存",-1)),l(t,{icon:"save"}),s[50]||(s[50]=a("按钮"))])]),s[70]||(s[70]=n("h2",{id:"s-最佳视觉效果",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#s-最佳视觉效果"},[n("span",null,"S: 最佳视觉效果")])],-1)),s[71]||(s[71]=n("p",null,[a("调整工具窗口宽度至"),n("code",null,"610"),a("+像素，达到最佳视觉效果")],-1)),s[72]||(s[72]=n("h2",{id:"s-怀疑插件卡顿",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#s-怀疑插件卡顿"},[n("span",null,"S: 怀疑插件卡顿")])],-1)),l(c,{imgList:["/img/faq/startCpuProfile.png","/img/faq/stopCpuProfile.png"]}),s[73]||(s[73]=p(`<p>点击 Help 菜单选择 <code>Start CPU usage profile</code> -&gt; <code>执行你认为卡顿的操作</code> -&gt; <code>Stop CPU usage profile</code>。将生成出来的 jfr 文件发给我们分析</p><h2 id="q-origin等请求头失效" tabindex="-1"><a class="header-anchor" href="#q-origin等请求头失效"><span>Q: Origin等请求头失效</span></a></h2><p>由于 <code>sun.net.www.protocol.http.HttpURLConnection</code> 设置了<strong>受限标头</strong>,以下一些请求头如果想使用,则需要给IDEA配置vm参数</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> final</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;">[] restrictedHeaders </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /* Restricted by XMLHttpRequest2 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //&quot;Accept-Charset&quot;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //&quot;Accept-Encoding&quot;,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Access-Control-Request-Headers&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Access-Control-Request-Method&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Connection&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#7F848E;font-style:italic;"> /* close is allowed */</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Content-Length&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //&quot;Cookie&quot;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //&quot;Cookie2&quot;,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Content-Transfer-Encoding&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //&quot;Date&quot;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //&quot;Expect&quot;,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Host&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Keep-Alive&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Origin&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // &quot;Referer&quot;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // &quot;TE&quot;,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Trailer&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Transfer-Encoding&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Upgrade&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //&quot;User-Agent&quot;,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;Via&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>点击 <strong>help-&gt;Edit Custom Vm Options...</strong>,在 <strong>idea.vmoptions</strong>(linux) 或者 <strong>idea64.exe.vmoptions</strong> (windows)中加入加入如下配置</p><div class="language-" data-highlighter="shiki" data-ext="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>-Dsun.net.http.allowRestrictedHeaders=true</span></span></code></pre></div><h2 id="q-响应返回-unexpected-end-of-file-from-server" tabindex="-1"><a class="header-anchor" href="#q-响应返回-unexpected-end-of-file-from-server"><span>Q: 响应返回 Unexpected end of file from server</span></a></h2><p>造成的原图大致如下</p><div class="language-" data-highlighter="shiki" data-ext="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>1. 网络连接丢失</span></span>
<span class="line"><span>2. 服务器决定关闭连接</span></span>
<span class="line"><span>3. 客户端和服务器之间的某些东西（nginx、路由器等）终止了请求</span></span>
<span class="line"><span>4. 服务端 api 需要代理但是 IDEA 没有配置,尤其是一些内网项目</span></span></code></pre></div><p>IDEA配置代理: <code>Setting-&gt; Appearance &amp; Behavior-&gt;System Settings-&gt;HTTP Proxy</code></p><h2 id="q-spring-get参数带数组-集合参数报-400错误" tabindex="-1"><a class="header-anchor" href="#q-spring-get参数带数组-集合参数报-400错误"><span>Q: Spring Get参数带数组/集合参数报 400错误</span></a></h2><p>例如Url <code>http://localhost:8081/test?a[0].b[0].token=xxx&amp;a[0].b[0].name=yyy</code></p><p>加入如下配置</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.context.annotation.Bean</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E5C07B;"> org.springframework.context.annotation.Configuration</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> WebConfig</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#E5C07B;"> ConfigurableServletWebServerFactory</span><span style="color:#61AFEF;"> webServerFactory</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        TomcatServletWebServerFactory</span><span style="color:#E06C75;"> factory</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> TomcatServletWebServerFactory</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        factory</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addConnectorCustomizers</span><span style="color:#ABB2BF;">((TomcatConnectorCustomizer) connector </span><span style="color:#C678DD;">-&gt;</span><span style="color:#E5C07B;"> connector</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;relaxedQueryChars&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;|{}[]</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> factory;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="q-操作按钮不可见" tabindex="-1"><a class="header-anchor" href="#q-操作按钮不可见"><span>Q: 操作按钮不可见</span></a></h2><p>点击 <code>Options</code> 勾选 <code>Show Toolbar</code></p><p><img src="`+b+'" alt="" loading="lazy"></p><h2 id="q-生成参数、跳转错乱" tabindex="-1"><a class="header-anchor" href="#q-生成参数、跳转错乱"><span>Q: 生成参数、跳转错乱</span></a></h2><p><strong>A:</strong> controller 代码里面不要出现方法名一样的方法</p><h2 id="q-左侧图标不显示" tabindex="-1"><a class="header-anchor" href="#q-左侧图标不显示"><span>Q: 左侧图标不显示</span></a></h2>',20)),n("p",null,[s[51]||(s[51]=a("左侧图标")),l(t,{icon:"restfulFastRequest"}),s[52]||(s[52]=a("不显示。"))]),s[74]||(s[74]=p('<p><strong>A:</strong> 打开配置 <code>setting-&gt;Editor-&gt;Gutter icons-&gt;show gutter icon</code></p><p><strong>B:</strong> 检查是否安装了 forestx 插件，该插件目前会引起 Fast Request 插件图标不展示</p><p><strong>C:</strong> 复制该类内容删除该类并重新新建该类</p><h2 id="q-输入参数后调用-api-发现无效" tabindex="-1"><a class="header-anchor" href="#q-输入参数后调用-api-发现无效"><span>Q: 输入参数后调用 API 发现无效</span></a></h2><p><strong>A:</strong> 插件版本小于 2022.2.3 的在 table 控件编辑某个值的时候，需要在编辑完值后<mark>先在空白处点一下</mark>，再发送请求，该问题在 2022.2.3+版本得到修复</p><h2 id="q-为啥插件没反应" tabindex="-1"><a class="header-anchor" href="#q-为啥插件没反应"><span>Q: 为啥插件没反应</span></a></h2>',6)),n("p",null,[s[54]||(s[54]=n("strong",null,"A:",-1)),s[55]||(s[55]=a(" 请先完善配置，参考")),l(i,{to:"/guide/getstarted/start.html"},{default:e(()=>s[53]||(s[53]=[a("快速开始")])),_:1}),s[56]||(s[56]=a("，再点击图标"))]),s[75]||(s[75]=p(`<h2 id="q-点击图标后-idea-卡死" tabindex="-1"><a class="header-anchor" href="#q-点击图标后-idea-卡死"><span>Q: 点击图标后 idea 卡死</span></a></h2><p><strong>A:</strong> 你设计的实体类嵌套递归，插件不支持，比如说 A 实体类有 B 实体类的属性，B 实体类有 A 实体类的属性</p><div class="language-java" data-highlighter="shiki" data-ext="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> A</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> B</span><span style="color:#E06C75;"> b</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> int</span><span style="color:#E06C75;"> xx</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> B</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> A</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> xx</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><p>以上这种情况如果你不需要 B 属性，那么你可以在生成的时候手动给 B 加一个 static 属性</p><div class="language-java" data-highlighter="shiki" data-ext="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> A</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> static</span><span style="color:#E5C07B;"> B</span><span style="color:#E06C75;"> b</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> int</span><span style="color:#E06C75;"> xx</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div><h2 id="s-apis-丢失" tabindex="-1"><a class="header-anchor" href="#s-apis-丢失"><span>S: APIs 丢失</span></a></h2><p>非常抱歉，安装过 2023.1.3 版本的(已隐藏)会导致历史 apis 丢失，此时需要手动找回数据。<mark>请不要回退插件版本</mark></p>`,7)),n("ol",k,[s[59]||(s[59]=n("li",null,"下载插件版本>=2023.1.3.2+的版本",-1)),s[60]||(s[60]=n("li",null,[a("找到项目下的.idea 目录，右键并点击 Local history(本地历史记录)，找到关于"),n("code",null,".idea/FastRequestCollection.xml"),a("的变更日志(标题包含了 Deleting)，找到最后一个版本，把其中的内容拷贝到"),n("code",null,".idea/fastRequest/fastRequestCollection.xml"),a("中，")],-1)),s[61]||(s[61]=n("li",null,"重启 idea",-1)),n("li",null,[s[57]||(s[57]=a("在 APIs tab 下点击图标")),l(t,{icon:"dataTransfer"}),s[58]||(s[58]=a("并确认数据转移"))])]),s[76]||(s[76]=n("p",null,[n("img",{src:u,alt:"dataTransfer20231",loading:"lazy"})],-1))])}const Q=C(x,[["render",S],["__file","faq.html.vue"]]),z=JSON.parse('{"path":"/guide/faq.html","title":"FAQ","lang":"zh-CN","frontmatter":{"title":"FAQ","icon":"faq","description":"关键字含义 S: 如何忽略 .fastRequest 目录 方式 1：在 IDEA 中不可见 有些开发者不希望看到.fastRequest目录，可以前往 idea 设置中的File Types，在Ignore files and folders中添加.fastRequest即可 ignoreFastRequestDir 方式 2：设置全局 gitign...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://api-buddy.com/en/guide/faq.html"}],["meta",{"property":"og:url","content":"https://api-buddy.com/guide/faq.html"}],["meta",{"property":"og:site_name","content":"Fast Request"}],["meta",{"property":"og:title","content":"FAQ"}],["meta",{"property":"og:description","content":"关键字含义 S: 如何忽略 .fastRequest 目录 方式 1：在 IDEA 中不可见 有些开发者不希望看到.fastRequest目录，可以前往 idea 设置中的File Types，在Ignore files and folders中添加.fastRequest即可 ignoreFastRequestDir 方式 2：设置全局 gitign..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://api-buddy.com/img/faq/ignoreFastRequestDir.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-09-19T05:32:42.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-19T05:32:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FAQ\\",\\"image\\":[\\"https://api-buddy.com/img/faq/ignoreFastRequestDir.png\\",\\"https://api-buddy.com/img/faq/slowOperationsConfig.png\\",\\"https://api-buddy.com/img/faq/enableNotifications.png\\",\\"https://api-buddy.com/img/manageConfig.png\\",\\"https://api-buddy.com/img/faq/timeout.png\\",\\"https://api-buddy.com/img/skill/urlError.png\\",\\"https://api-buddy.com/img/2024.1.1/ignoreFiled.png\\",\\"https://api-buddy.com/img/apiPreview.gif\\",\\"https://api-buddy.com/img/skill/multiFileUpload.png\\",\\"https://api-buddy.com/img/faq/showToolbar.png\\",\\"https://api-buddy.com/img/faq/dataTransfer202313.png\\"],\\"dateModified\\":\\"2025-09-19T05:32:42.000Z\\",\\"author\\":[]}"]]},"git":{"createdTime":1717147459000,"updatedTime":1758259962000,"contributors":[{"name":"Kings","username":"Kings","email":"963987632@qq.com","commits":7,"url":"https://github.com/Kings"},{"name":"Mister-Hope","username":"Mister-Hope","email":"mister-hope@outlook.com","commits":1,"url":"https://github.com/Mister-Hope"}]},"readingTime":{"minutes":6.25,"words":1874},"filePathRelative":"guide/faq.md","localizedDate":"2024年5月31日","autoDesc":true}');export{Q as comp,z as data};
